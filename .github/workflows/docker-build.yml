name: Build Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - 'develop'
      - 'master'

jobs:
  build_docker_image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Build WAR package
        run: mvn clean install

      - name: Create staging directory
        run: mkdir staging && cp geobroker/target/geobroker.war staging

      - name: Provide built WAR package
        uses: actions/upload-artifact@v4
        with:
          name: geobroker.war
          path: staging/geobroker.war

      - name: Extract Maven project version
        working-directory: geobroker
        run: echo "VERSION=`mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec`" | sed "s/SNAPSHOT/`date +%Y%m%d%H%M%S`/" >> $GITHUB_OUTPUT
        id: version-extraction

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./geobroker
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/geobroker:${{ steps.version-extraction.outputs.VERSION }}

      - name: Tag as latest on releases
        uses: docker/build-push-action@v5
        if: github.ref == 'refs/heads/master'
        with:
          context: ./geobroker
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/geobroker:latest
