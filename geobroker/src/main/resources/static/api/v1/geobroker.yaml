openapi: "3.0.0"
info:
  title: Geobroker
  description: |
    The geobroker API actually provides two APIs - private and public.
    A firewall or proxy is required to grant or block access to either interface.

    > **Note:** error responses are not yet designed. Expect plain text messages in the response for now.

    > **Note:** descriptions for the models are not yet available. Please ask when things remained unclear.
  version: v1
  license:
    name: MIT
servers:
  - url: /api/v1
tags:
  - name: public
    description: |
      The public API allows position updates via a token (secret) that identifies a geo object.
      The output on the public API is restricted in two ways:
        - a unit may only see some objects as set via the `sees` property on the private API
        - individual objects only share public properties (last position, style, friendly name),
            they are called dots
  - name: private
    description: |
      CRUD operations for all geo objects.
      Geo objects might contain sensitive information that is not available on the public API.
paths:
  /private/objects:
    get:
      tags: [private]
      operationId: getAllObjects
      summary: Get all objects (units, incidents, ...) in the broker.
      responses:
        '200':
          description: list of geo object with all properties
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/object'
    post:
      tags: [private]
      operationId: createNewObject
      summary: Create a new object in the broker.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/object'
  /private/objects/{token}:
    put:
      tags: [private]
      operationId: updateObject
      summary: Update an existing object in the broker.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/object'
    delete:
      tags: [private]
      operationId: deleteObject
      summary: Delete an existing object from the broker.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/object'
  /public/position/{token}:
    post:
      tags: [public]
      operationId: updatePosition
      summary: Updates a unit's position.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/position'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dot'
components:
  schemas:
    object:
      allOf:
        - type: object
          properties:
            token:
              type: string
        - $ref: '#/components/schemas/dot'
        - type: object
          properties:
            sees:
              type: array
              items:
                type: string
    dot:
      required:
      properties:
        name:
          type: string
        position:
          $ref: '#/components/schemas/position'
        class:
          type: array
          items:
            type: string
    position:
      required:
        - time
        - lat
        - long
      properties:
        time:
          type: number
        lat:
          type: number
        long:
          type: number
        acc:
          type: number
        head:
          type: number
        speed:
          type: number
