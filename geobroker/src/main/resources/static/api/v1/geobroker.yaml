openapi: "3.0.0"
info:
  title: Geobroker
  description: |
    The geobroker API actually provides two APIs - private and public.

    The private API provides CRUD operations for geo objects.
    Geo objects might contain sensitive information that is not available on the public API.

    The public API allows position updates via a token (secret) that identifies a geo object.
    The output on the public API is restricted in two ways:
      - a unit may only see some objects as set via the private API
      - individual objects only share public properties (last position, style, friendly name),
        they are called dots
  version: v1
  license:
    name: MIT
servers:
  - url: /api/v1
paths:
  /private/objects:
    get:
      operationId: getAllObjects
      summary: Get all objects (units, incidents, ...) in the broker.
      responses:
        '200':
          description: list of geo object with all properties
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/object'
    post:
      operationId: createNewObject
      summary: Create a new object in the broker.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/object'
  /private/objects/{token}:
    put:
      operationId: updateObject
      summary: Update an existing object in the broker.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/object'
  /public/position/{token}:
    post:
      operationId: updatePosition
      summary: Updates a units position.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/position'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dot'
components:
  schemas:
    object:
      allOf:
        - token:
          type: string
        - $ref: '#/components/schemas/dot'
        - sees:
          type: array
          items:
            type: string
    dot:
      required:
      properties:
        name:
          type: string
        position:
          $ref: '#/components/schemas/position'
    position:
      required:
        - time
        - lat
        - long
      properties:
        time:
          type: number
        lat:
          type: number
        long:
          type: number
        acc:
          type: number
        head:
          type: number
        speed:
          type: number
